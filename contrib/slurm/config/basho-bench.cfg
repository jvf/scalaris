
################################################################################
#
# Author: Jens V. Fischer
# Date: 11.11.2015
#
# CONFIGURATION FOR basho-bench.sh
#
# Default configuration settings and documention for basho-bench.sh.
#
# All variables are only set, if the variable was unset or empty, i.e. variables
# set before sourcing this config (e.g. in the quick-config section) or passed
# with the call to the script are *not* overwritten.
#
# This file is sourced in basho-bench.sh -> main().
#
################################################################################

#----------------------------
# basho-bench.sh Configuration
#----------------------------

# Series of scalaris ring sizes to use.
# If a list of values is given, bbench will be repeated for given every value.
# NODES_SERIES=${NODES_SERIES:-"2 4 8 16 32"}
NODES_SERIES=${NODES_SERIES:-"4"}

# Series of VMs per node to use.
# This determines the number of Erlang VMs which are started per slurm node.
# If a list of values is given, bbench will be repeated for every given value.
# VMS_PER_NODE_SERIES=${VMS_PER_NODE_SERIES:-"01 02 04 08"}
VMS_PER_NODE_SERIES=${VMS_PER_NODE_SERIES:-"1"}

# number of times the basho benchmark is repeated
REPETITIONS=${REPETITIONS:-1}

# number of workers per load generator
# workers / dht_node = load_generators * workers_base
WORKERS_PER_LG_SERIES=${WORKERS_PER_LG_SERIES:-4}

# partition the list of scalaris hosts available for each load generators
PARTITION_HOSTLIST=${PARTITION_HOSTLIST:-"false"}

# a load generator is a Erlang VM running a basho bench instance
# there can be multiple load generators on one machine
# load generators can also distributed to multiple machines
LOAD_GENERATORS=${LOAD_GENERATORS:-2}

# hosts for the load generators. LOAD_GENERATORS should be a multiple of number of hosts
DEFAULT_HOSTS=( "$(hostname -f)" )
LG_HOSTS=(${LG_HOSTS[@]:-${DEFAULT_HOSTS[@]}})

# start collectl on the load generators and the scalaris nodes
# output will be written to WD/collectl
COLLECTL=${COLLECTL:-false}
COLLECTL_SUBSYSTEMS=${COLLECTL_SUBSYSTEMS:-"-s cCmMnNdD"}
COLLECTL_INTERVAL=${COLLECTL_INTERVAL:-"-i 10"}
COLLECTL_FLUSH=${COLLECTL_FLUSH:-"-F 0"}

# log top 5 processes (beware: ressource intensive)
TOPLOG=${TOPLOG:-false}

# Prefix for naming the basho bench folder
PREFIX=${PREFIX:-"results-"}

# The working directory for basho bench (logs, results and tmp files go here)
WD=${WD:-"$HOME/bbench"}

# directory of the scalaris repository
SCALARIS_DIR=${SCALARIS_DIR:-"$HOME/scalaris"}

# time two wait between benchmark repetitions
SLEEP1=${SLEEP1:-5}

# time two wait between different ring sizes
SLEEP2=${SLEEP2:-1}


#-------------------------------------------------------------------------------
# Scalaris Configuration
#
# These are parameters passed to the scalaris or slurm scripts. Most of them are
# set dynamically by basho-bench.sh (these are commented out), they are described
# here for documentation purposes.
#-------------------------------------------------------------------------------

# Number of physical machines to allocate
NODES="${NODES:-16}"

# A list of slurm nodes to allocate (has to be compatible with NODES)
# NODELIST="cumu01-[00-15]"

# Erlang VMs per machine
VMS_PER_NODE="${VMS_PER_NODE:-1}"

# DHT nodes per Erlang VM
DHT_NODES_PER_VM="${DHT_NODES_PER_VM:-1}"

# Shuffle the ids instead of assigning them in ring order
SHUFFLE_NODE_IDS=${SHUFFLE_NODE_IDS:-1}

# Interval the watchdog (cleans up cancelled jobs) checks the job status
WATCHDOG_INTERVAL=${WATCHDOG_INTERVAL:-5}

# Flags for the Erlang Scheduler
# ERL_SCHED_FLAGS="+S 2"
ERL_SCHED_FLAGS=${ERL_SCHED_FLAGS:-""}

# Partition to use for slurm
PARTITION=${PARTITION:-"CUMU"}

# slurm timeout
TIMEOUT=${TIMEOUT:-10}

# directory for the collectl logs
# COLLECTL_DIR=${COLLECTL_DIR:-$WD/collectl}

# set collectl arguments
COLLECTL_SUBSYSTEMS=${COLLECTL_SUBSYSTEMS:-"-s cmnd"}
COLLECTL_INTERVAL=${COLLECTL_INTERVAL:-"-i 10"}
COLLECTL_FLUSH=${COLLECTL_FLUSH:-"-F 0"}

# directory for the Scalaris source
SCALARIS_SRC=${SCALARIS_SRC:-$HOME/scalaris}

# set to true to run Scalaris in a local directory instead of the nfs volume
SCALARIS_LOCAL=${SCALARIS_LOCAL:-false}

#-------------------------------------------------------------------------------
# Basho Bench Configuration
#
# These are parameters written to the basho bench configuration file. Most of
# them are set dynamically by basho-bench.sh (these are commented out), they are
# described here for documentation purposes.
#-------------------------------------------------------------------------------

# The directory of the basho benchmark installation
BBENCH_DIR=${BBENCH_DIR:-"$HOME/basho_bench"}

# Random seed for the basho bench
# (usually dynnamically created per load generator)
# RANDOM_SEED="{42, 23, 122}"

# mode (max or rate in operations/sec)
# Beware: rate is per worker per load generator
# total rate = # load generators * worker base * ringsize * rate
MODE=${MODE:-"{rate, max}"}
MODE=${MODE:-"{rate, 150}"}

# duration in minutes
DURATION=${DURATION:-1}

SCALARISCTL_PARAMS=${SCALARISCTL_PARAMS:-""}

# value size in bytes
VALUE_SIZE=${VALUE_SIZE:-512}
